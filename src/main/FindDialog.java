
package main;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import javax.swing.JTextPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;

/**
 *
 * @author isgun
 */
public class FindDialog extends javax.swing.JFrame {

    /** Creates new form FindDialog */
    public FindDialog() {
        initComponents();
    }

    TextRepository tr;
    Iterator i;
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wordToFind = new javax.swing.JTextField();
        label = new javax.swing.JLabel();
        cikButton = new javax.swing.JButton();
        findButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Bul");
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        wordToFind.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                wordToFindKeyPressed(evt);
            }
        });

        label.setText("Bulunacak kelimeyi girin:");

        cikButton.setText("Çık");
        cikButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cikButtonActionPerformed(evt);
            }
        });

        findButton.setText("Bul");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(wordToFind, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(findButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                        .addComponent(cikButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(wordToFind, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cikButton)
                    .addComponent(findButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Çık butonuna basınca değiştirme ekranı kapatılıyor
    private void cikButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cikButtonActionPerformed
        JTextPane textarea = TextEditorGUI.textArea;
        textarea.getHighlighter().removeAllHighlights();
        this.dispose();
    }//GEN-LAST:event_cikButtonActionPerformed

    // Bul butonuna basınca bulma işlemi yapılıyor
    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
        DefaultHighlighter.DefaultHighlightPainter hp = new DefaultHighlighter.DefaultHighlightPainter(Color.yellow);
        tr = new TextRepository();
        // Tüm kelimeleri tek tek dolaşıp karşılaştıracak olan Iterator oluşturuldu
        i = tr.getIterator();
        int currentIndex = 0;
        JTextPane textarea = TextEditorGUI.textArea;
        // Varsa işaretli kelimelerin işareti kaldırılıyor
        textarea.getHighlighter().removeAllHighlights();
        
        // Iteratorde kelime var olduğu sürece çalışacak döngü
        while(i.hasNext()) {
            // Iteratorun mevcut kelimesi alınıyor
            String word = (String)i.next();
            // Bu kelimenin uzunluğu da ayrıca alınıyor
            int len = word.length();
            // Eğer bu kelime aranan kelimeye eşitse
            if(word.equals(wordToFind.getText())) {
                // Kelime işaretleniyor
                int highlightIndex = textarea.getText().indexOf(word, currentIndex);
                try {
                    textarea.getHighlighter().addHighlight(highlightIndex, highlightIndex + len, hp);
                    /*System.out.println("İşaretleme if'ine girildi.");
                    System.out.println("Current Index: " + currentIndex);
                    System.out.println("İşaretleme Indexi: " + highlightIndex);
                    System.out.println("Uzunluk: " + len);
                    System.out.println("İşaretleme Bitiş Indexi: " + (highlightIndex + len));
                    System.out.println();*/
                }
                catch(BadLocationException e) {
                    System.out.println("BadLocationException: " + e);
                }
                // Ve mevcut index, son işaretlenen index + boşluk payı olarak ayarlanıyor
                currentIndex = highlightIndex + 1;
            // Eğer kelimeler farklıysa mevcut indexe kontrol edilen kelimenin uzunluğu ve boşluk payı ekleniyor
            } else currentIndex = currentIndex + len + 1;
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) findButton.doClick();
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE) cikButton.doClick();
    }//GEN-LAST:event_formKeyPressed

    private void wordToFindKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_wordToFindKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) findButton.doClick();
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE) cikButton.doClick();
    }//GEN-LAST:event_wordToFindKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindDialog().setVisible(true);
            }
        });
    }
    
    public String getInput() {
        return wordToFind.getText();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cikButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel label;
    private javax.swing.JTextField wordToFind;
    // End of variables declaration//GEN-END:variables

}
